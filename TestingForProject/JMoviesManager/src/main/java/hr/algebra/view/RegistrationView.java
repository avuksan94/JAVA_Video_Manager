/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.controller.RegistrationController;
import hr.algebra.dal.models.Person;
import hr.algebra.dal.models.User;
import java.sql.SQLException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import javax.validation.ConstraintViolation;

/**
 *
 * @author antev
 */
public class RegistrationView extends javax.swing.JFrame {

    /**
     * Creates new form RegistrationView
     *
     * @throws java.sql.SQLException
     */
    public RegistrationView() throws SQLException {
        initComponents();
        hideErrors();
        initController();
        errorMessages = new StringBuilder();
    }

    private boolean isValid = true;
    private StringBuilder errorMessages;
    private RegistrationController regController;

    private void initController() throws SQLException {
        regController = new RegistrationController(new Person(), new User(), this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRegistrationForm = new javax.swing.JLabel();
        lbFirstName1 = new javax.swing.JLabel();
        lbLastName1 = new javax.swing.JLabel();
        lbAge = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        lbUsername = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        tfLastName = new javax.swing.JTextField();
        tfAge = new javax.swing.JTextField();
        tfUsername = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        lbErrorFirstName = new javax.swing.JLabel();
        lbErrorLastName = new javax.swing.JLabel();
        lbErrorAge = new javax.swing.JLabel();
        lbErrorUsername = new javax.swing.JLabel();
        lbErrorPassword = new javax.swing.JLabel();
        lbErrorEmail = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        pfPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register account");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbRegistrationForm.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbRegistrationForm.setText("Registration Form");

        lbFirstName1.setText("First Name");

        lbLastName1.setText("Last Name");

        lbAge.setText("Age");

        lbPassword.setText("Password");

        lbUsername.setText("Username");

        lbEmail.setText("Email");

        tfFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFirstNameActionPerformed(evt);
            }
        });

        lbErrorFirstName.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorFirstName.setText("X");

        lbErrorLastName.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorLastName.setText("X");

        lbErrorAge.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorAge.setText("X");

        lbErrorUsername.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorUsername.setText("X");

        lbErrorPassword.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorPassword.setText("X");

        lbErrorEmail.setForeground(new java.awt.Color(255, 0, 0));
        lbErrorEmail.setText("X");

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbRegistrationForm, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(283, 283, 283))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(254, 254, 254))))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbAge, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbLastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbRegistrationForm, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorLastName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAge, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorAge))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorPassword)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbErrorEmail))
                .addGap(33, 33, 33)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        try {
            register();
        } catch (Exception ex) {
            Logger.getLogger(RegistrationView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void tfFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFirstNameActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    public void hideErrors() {
        lbErrorFirstName.hide();
        lbErrorLastName.hide();
        lbErrorAge.hide();
        lbErrorUsername.hide();
        lbErrorPassword.hide();
        lbErrorEmail.hide();
    }

    public boolean checkIfUsernameTaken(String username) throws Exception {
        return regController.checkIfUsernameTaken(username);
    }

    public boolean checkIfEmailTaken(String email) throws Exception {
        return regController.checkIfEmailTaken(email);
    }

    private boolean handleFieldError(JLabel label, boolean condition, String errorMessage) {
        if (condition) {
            label.setVisible(true);
            label.setText(errorMessage);
            return true;
        }
        label.setVisible(false);
        return false;
    }

    //REGISTER THE USER:
    public void register() throws SQLException, Exception {
        String firstName = tfFirstName.getText();
        String lastName = tfLastName.getText();
        String email = tfEmail.getText();
        String username = tfUsername.getText();
        String password = pfPassword.getText();

        hideErrors();
        errorMessages.setLength(0);

        //the validators only checks Strings that are null so i need to check ints manualy
        int age = 0;
        String ageText = tfAge.getText();
        if (!ageText.isEmpty()) {
            try {
                age = Integer.parseInt(ageText);
            } catch (NumberFormatException e) {
                lbErrorAge.setVisible(true);
                isValid = false;
            }
        } else {
            lbErrorAge.setVisible(true);
            isValid = false;
        }

        regController.setFirstName(firstName);
        regController.setLastName(lastName);
        regController.setAge(age);
        regController.setImageURL();
        regController.setUsername(username);
        regController.setPassword(password);
        regController.setEmail(email);
        regController.setRole();
        regController.setCreatedAt();

        // Create validator https://docs.oracle.com/javaee/7/api/javax/validation/ValidatorFactory.html
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();

        // Validate models
        Set<ConstraintViolation<User>> userViolations = validator.validate(regController.getUser());
        Set<ConstraintViolation<Person>> personViolations = validator.validate(regController.getPerson());

        //I have separated the validators in two different methods, if there is an issue with the Person of User data,the error labels will be displayed
        ValidatePerson(personViolations);
        ValidateUser(userViolations);

        //GUARD - (better than using if statement nesting)

        if (checkIfUsernameTaken(username)) {
            //MessageUtils.showErrorMessage("Username already taken!", "Username already in use");
            lbErrorUsername.setText("Username already taken");
            lbErrorUsername.setVisible(true);
            return;
        }

        if (checkIfEmailTaken(email)) {
            //MessageUtils.showErrorMessage("Email already taken!", "Email already in use");
            lbErrorEmail.setText("Email already taken");
            lbErrorEmail.setVisible(true);
            return;
        }

        if (isValid) {
            regController.registerUser();
            JOptionPane.showMessageDialog(null, "User has been successfuly created, please contact the Administrator for verification! :D ", "User created!", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
        } else {
            //THIS IS FOR TESTING PURPOUSES
            //JOptionPane.showMessageDialog(null, errorMessages.toString(), "You have several Errors", JOptionPane.ERROR_MESSAGE);
        }

    }
    //For the validation part

    public void ValidateUser(Set<ConstraintViolation<User>> uv) {
        // If there are any violations, print the error messages
        if (!uv.isEmpty()) {
            isValid = false;
            uv.forEach(violation -> {
                String path = violation.getPropertyPath().toString();
                switch (path) {
                    case "username":
                        lbErrorUsername.setVisible(true);
                        lbErrorUsername.setText(violation.getMessage());
                        break;
                    case "passwordHash":
                        lbErrorPassword.setVisible(true);
                        lbErrorPassword.setText(violation.getMessage());
                        break;
                    case "email":
                        lbErrorEmail.setVisible(true);
                        lbErrorEmail.setText(violation.getMessage());
                        break;
                }
                errorMessages.append(violation.getMessage());
                errorMessages.append("\n");
                //System.out.println(violation.getMessage());
            });
        } else if (uv.isEmpty()) {
            isValid = true;
        }
    }

    public void ValidatePerson(Set<ConstraintViolation<Person>> pv) {
        // If there are any violations, print the error messages
        if (!pv.isEmpty()) {
            isValid = false;
            pv.forEach(violation -> {
                String path = violation.getPropertyPath().toString();
                switch (path) {
                    case "firstName":
                        lbErrorFirstName.setVisible(true);
                        lbErrorFirstName.setText(violation.getMessage());
                        break;
                    case "lastName":
                        lbErrorLastName.setVisible(true);
                        lbErrorLastName.setText(violation.getMessage());
                        break;
                    case "age":
                        lbErrorAge.setVisible(true);
                        lbErrorAge.setText(violation.getMessage());
                        break;
                }
                errorMessages.append(violation.getMessage());
                errorMessages.append("\n");
                //System.out.println(violation.getMessage());
            });
        } else if (pv.isEmpty()) {
            isValid = true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RegistrationView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RegistrationView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lbAge;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbErrorAge;
    private javax.swing.JLabel lbErrorEmail;
    private javax.swing.JLabel lbErrorFirstName;
    private javax.swing.JLabel lbErrorLastName;
    private javax.swing.JLabel lbErrorPassword;
    private javax.swing.JLabel lbErrorUsername;
    private javax.swing.JLabel lbFirstName1;
    private javax.swing.JLabel lbLastName1;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbRegistrationForm;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
